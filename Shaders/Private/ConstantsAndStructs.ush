#pragma once

#define EMPTY 0
#define TAKEN 1
#define NAN asfloat(0xffffffff)
#define UNDEFINED_INT -2147483647
#define UNDEFINED_FLOAT3 float3(340000000000000000000000000000000.0f, 340000000000000000000000000000000.0f, 340000000000000000000000000000000.0f)

#define VOLUME_MOD 1.6119919540164696407169668466392849389446140723238615

#define NAN asfloat(0xffffffff)
#define GRP_SIZE_VOXELS 128
#define GRP_SIZE_PARTICLES 1024
#define EXTRA_PARTICLES_IN_VOXEL 0

#define VELOCITY(p) ((p).VelocityAndMass.xyz)
#define MASS(p) ((p).VelocityAndMass.w)

#define CP_POSITION(p) ((p).PositionAndRadius.xyz)
#define FP_POSITION(p) ((p).PositionAndEase.xyz)
#define RADIUS(p) ((p).positionAndRadius.w)
#define EASE(p) ((p).positionAndEase.w)

struct CoarseParticle
{
    float4 PositionAndRadius; // xyz is position, w is particle radius
    float4 VelocityAndMass; // xyz is velocity, w is mass
};

struct FineParticle
{
    float4 PositionAndEase; // xyz is position, w is particle ease
    float4 VelocityAndMass; // xyz is velocity, w is particle mass
};

struct VoxelEntry
{
    int4 IndexAndRoom; // xyz is index, w is amount of particles that fit in the voxel
    float4 PositionAndMass; // xyz is position, w is voxel mass
    float4 Velocity; // xyz is velocity, w is padding
    float4 MinBound; // xyz is min corner of the total spawning bound, w is padding
    float4 MaxBound; // xyz is max corner of the inner spawning bound, w is padding
    float4 InnerMinBound; // xyz is min corner of th einner spawning bound, w is padding
    float4 InnerMaxBound; // xyz is max corner of the inner spawning bound, w is padding
};